@page "/auth/signin"
@using API.Dto.User;

@inject ILogger<SignIn> Logger
@inject UserService UserService
@inject NavigationManager Navigation
@inject AuthStateContainer AuthStateContainer

<Header Text="Sign In" />

<EditForm Model="@Model" OnSubmit="@Submit" class="flex flex-col gap-1">

    <label for="email">
        Email:<br>
        <InputText @bind-Value="Model!.Email" id="email" class="rounded-md focus:border-primary outline-none" />
    </label>

    <label for="masterPassword">
        Master Password:<br>
        <InputText @bind-Value="Model!.MasterPassword" id="masterPassword" type="password" class="rounded-md focus:border-primary outline-none" />
    </label>

    <Button Text="Submit" Type="submit" />
    <NavLink href="auth/signup">
        <Button Text="Sign Up" />
    </NavLink>
</EditForm>

@code {
    public SignInModel Model { get; set; }

    protected override void OnInitialized()
    {
        InitialiseModel();
    }

    private void InitialiseModel()
    {
        Model = new()
        {
            Email = "",
            MasterPassword = ""
        };
    }

    private async void Submit()
    {
        Logger.LogInformation("Submitting sign in request");

        var dto = new SignInDto()
            {
                Email = Model.Email,
                MasterPassword = Model.MasterPassword,
            };

        var user = UserService.SignIn(dto);

        AuthStateContainer.LoggedInUser = user;
        await SecureStorage.Default.SetAsync("user_id", user.Id.ToString());

        Logger.LogInformation($"Signed user in: {user.Id}");

        InitialiseModel();

        Navigation.NavigateTo("/");
    }
}
